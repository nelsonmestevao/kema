#!/usr/bin/env bash

set -Eeuo pipefail

BASE_DIR=$(dirname "${BASH_SOURCE[0]:-$0}")
cd "${BASE_DIR}/.." || exit 127

# shellcheck source=../scripts/helpers.sh
. scripts/helpers.sh

PROGRAM=$(basename "${BASH_SOURCE[0]:-$0}")
VERSION=0.2.2

function display_help() {
  cat <<EOF
  $(help_section Usage)
    ${PROGRAM} [options]

  $(help_section Options)
    -h --help         Show this screen.
    -v --version      Show version.
EOF
}

source .venv/bin/activate

if [[ $(git branch --show-current) != 'master' ]]; then
  log_error "You're trying to release from Git branch $(git branch --show-current) instead of master." \
     "To prevent releases from unstable branches, releases are only allowed from master."
  exit 1
fi

if [[ $(git status -s) ]]; then
  log_error "There are some uncommitted changes in this repository." \
    "This might introduce unwanted artifacts in the release." \
    "Please stash or commit your changes prior to cooking a new release."
  exit 2
fi

function clean_files() {
  log_info "clean" "Removing distribution files..."
  rm -rvf dist/*
}

function publish_package() {
  log_info "publish" "Packaging the project for publishing..."
  python3 setup.py sdist

  log_info "publish" "Uploading the project to PyPI..."
  twine upload dist/*

  log_success "Package published to PyPi"
}

function update_git_tags() {
  log_info "publish" "Uploading tags to git origin..."
  CURRENT_VERSION=$(grep 'VERSION' kema/__init__.py | cut -d'=' -f 2 |  tr -d " " | tr -d '"')
  git tag -a "v${CURRENT_VERSION}" -m "Version ${CURRENT_VERSION}"
  git push --tags
  log_success "Uploaded tag v${CURRENT_VERSION} to git origin"
}

case ${1:-PyPI} in
  -h | --help)
    display_help
    ;;
  -v | --version)
    display_version ${PROGRAM} ${VERSION}
    ;;
   PyPI)
    clean_files
    publish_package
    update_git_tags
    ;;
   *)
    display_help >&2
    exit 1
    ;;
esac
